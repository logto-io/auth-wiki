---
import { AstroSeo } from "@astrolib/seo";
import {
  defaultLocale,
  getLocale,
  getLocaleUrl,
  locales,
} from "astro-i18n-aut";
import { getPhrases } from "../phrases";

type Props = {
  title?: string;
  description?: string;
};

const { props } = Astro;

const locale = getLocale(Astro.url);
const phrases = getPhrases(locale);
const title = props.title ? `${props.title} Â· Auth Wiki` : "Auth Wiki";
const description = props.description ?? phrases.site.description;
// Needs to remove the file extension from the URL since Astro will add it in production when
// build format is set to "file".
const canonical = new URL(
  Astro.url.pathname.endsWith(".html")
    ? Astro.url.pathname.slice(0, -5)
    : Astro.url.pathname,
  Astro.site,
).href;
---

<!doctype html>
<html lang={locale} dir={locale === "ar" ? "rtl" : "ltr"}>
  <head>
    <meta charset="UTF-8" />
    <AstroSeo
      title={title}
      description={description}
      canonical={canonical}
      openGraph={{
        title,
        description,
        url: canonical,
        site_name: "Auth Wiki",
      }}
      languageAlternates={[
        ...Object.keys(locales).map((lang) => ({
          hreflang: lang,
          href: new URL(getLocaleUrl(Astro.url.pathname, lang), Astro.url).href,
        })),
        {
          hreflang: "x-default",
          href: new URL(
            getLocaleUrl(Astro.url.pathname, defaultLocale),
            Astro.url,
          ).href,
        },
      ]}
    />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link
      rel="icon"
      type="image/png"
      sizes="160x160"
      href="/favicon-160x160.png"
    />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <meta name="generator" content={Astro.generator} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <script
      defer
      data-domain="auth.wiki"
      src="https://plausible.io/js/script.outbound-links.js"></script>
  </head>

  <body>
    <slot />
  </body>
</html>

<style is:global>
  :root {
    --content-max-width: 1280px;
    --content-padding: 40px;
    --color-background: #f3f3f3;
    --color-text: #191c1d;
    --color-link: #4300da;
  }
  @media (prefers-color-scheme: dark) {
    :root {
      --color-background: #040407;
      --color-text: #fff;
      --color-link: rgb(158, 120, 255);
    }
  }
  @media (max-width: 810px) {
    :root {
      --content-padding: 24px;
    }
  }
  @media (max-width: 420px) {
    :root {
      --content-padding: 16px;
    }
  }
  * {
    box-sizing: border-box;
  }
  html {
    font-family:
      "system-ui",
      -apple-system,
      "Segoe UI",
      Roboto,
      Oxygen,
      Ubuntu,
      Cantarell,
      "Fira Sans",
      "Droid Sans",
      "Helvetica Neue",
      sans-serif,
      "System Default";
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: auto;
    background: var(--color-background);
  }
  body {
    color: var(--color-text);
    margin: 0;
    padding: 0;
  }
  code {
    font-family:
      Fira Code,
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin-block: 0;
  }
  /* Updated from https://shiki.style/guide/dual-themes#query-based-dark-mode */
  @media (prefers-color-scheme: dark) {
    .astro-code,
    .astro-code span {
      color: var(--shiki-dark) !important;
      background-color: var(--shiki-dark-bg) !important;
    }
  }

  /* Reusable styles */
  .solid-button {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    text-decoration: none;
    padding: 8px 12px;
    border-radius: 6px;
    color: #fff;
    background-color: rgba(255, 255, 255, 0.1);
    font-size: 14px;
    font-weight: 600;
    line-height: 20px;
    transition: background-color 0.2s ease-in-out;
  }

  .solid-button:hover {
    cursor: pointer;
    background-color: rgba(255, 255, 255, 0.18);
  }

  .solid-button svg {
    height: 20px;
    width: auto;
    margin-inline-end: -2px;
  }
  @media (max-width: 810px) {
    .solid-button {
      font-size: 12px;
      line-height: 16px;
      padding: 6px 10px;
    }

    .solid-button svg {
      width: 16px;
      height: 16px;
    }
  }
</style>
