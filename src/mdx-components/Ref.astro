---
import { getEntry } from "astro:content";
import { Icon } from "astro-icon/components";
import { defaultLocale, getLocale } from "astro-i18n-aut";

type Props = {
  /**
   * The internal slug of the reference. It must be a valid slug of an article loaded in the site.
   * @see 'terms' collection in the 'src/content' directory.
   */
  slug: string;
  /**
   * The optional heading ID to link to. If the article has no heading with the given ID, an error
   * will be thrown.
   */
  headingId?: string;
};

const locale = getLocale(Astro.url);
const { slug, headingId } = Astro.props;
const getEntryWithFallback = async () => {
  const entry = await getEntry("terms", `${locale}/${slug}`);
  if (entry) {
    return entry;
  }

  if (locale !== defaultLocale) {
    const fallbackEntry = await getEntry("terms", `${defaultLocale}/${slug}`);
    if (fallbackEntry) {
      return fallbackEntry;
    }
  }

  throw new Error(
    `The article with slug "${locale}/${slug}" was not found in both current and fallback locales.`,
  );
};
const entry = await getEntryWithFallback();
const headings = await entry.render().then(({ headings }) => headings);
const heading = headings.find((heading) => heading.slug === headingId);

if (headingId && !heading) {
  throw new Error(
    `The heading with ID "${headingId}" was not found in the article with slug "${slug}".`,
  );
}
---

<span>
  <Icon name="document" />
  <a href={`/${entry.slug}${heading ? `#${headingId}` : ""}`}>
    <slot>{heading?.text ?? entry.data.title}</slot>
  </a>
</span>

<style>
  [data-icon="document"] {
    vertical-align: sub;
    height: 1.1em;
    color: var(--color-link);
  }
  a {
    display: inline-block;
  }
</style>
